<link rel="stylesheet" href="style.css">
<!-- Comment Template -->
<div class="d-flex justify-content-center align-items-center mt-3">
  <div id="player-warning" style="display:none;" class="alert alert-warning " role="alert">
    <small id="player-src1" class="player-src1"></p>
  </div>
  <div id="player-error" style="display:none;" class="alert alert-danger " role="alert">
    <small id="player-src2" class="player-src2"></p>
  </div>
</div>
<div class="d-flex justify-content-center align-items-center mt-3">
    <a id="logo-link" href="#">
        <img class="logo" src="../media/{{ station.stn_name }}/128x128.png">
    </a>
</div>
<div class="d-flex justify-content-center align-items-center mt-3">
    <audio id="player" volume="0.5" preload="auto" playsinline></audio> <!-- assume that preload works -->
    <button id="vol_minus" class="button-raised vol_con" style="display: none" role="button">âˆ’</button>
    <button class="button-raised button-raised-mute vol_con" style="display: none" role="button">Mute</button>
    <button id="vol_plus" class="button-raised vol_con" style="display: none" role="button">+</button>
    <button id="start-button" class="button-raised" role="button" style="display: none;">Tune in!</button>
    <button id="loading-button" class="button-raised" role="button" style="background-color: chocolate;" disabled>Loading . . .</button> <!-- hide the play button by default unless audio source is valid -->
</div>

<script>
// DOMContentLoaded event handler
document.addEventListener('DOMContentLoaded', function() {
  var player = document.getElementById('player');
  var volMinusBtn = document.getElementById('vol_minus');
  var muteBtn = document.querySelector('.button-raised-mute');
  var volPlusBtn = document.getElementById('vol_plus');
  var startBtn = document.getElementById('start-button');
  var loadingBtn = document.getElementById('loading-button');
  var logoLink = document.getElementById('logo-link');

  var localSource = location.origin + ":8080/{{ station.stn_name }}/{{ station.tz_offset }}";
  var standbySource = "https://bbcradiorelay.net:8443/{{ station.stn_name }}/{{ station.tz_offset }}";
  var fallbackSource = "http://bbcradiorelay.duckdns.org:8000/{{ station.stn_name }}/{{ station.tz_offset }}";
  var failedSource = '../media/radio_noise.ogg';
  var sources = [localSource, standbySource, fallbackSource]; // Array of sources to try
  var sourceIndex = 0;
  
function loadNextSource() {
  // Hide the elements with the class 'vol_con'
  document.querySelectorAll('.vol_con').forEach(function(element) {
    element.style.display = 'none';
  });
  
  player.src = sources[sourceIndex];
  player.load();
  player.addEventListener('error', handleSourceError);
}
  
function handleSourceError() {
  console.log('handleSourceError event fired')
  player.removeEventListener('error', handleSourceError); // Remove the event listener
  sourceIndex++;
  console.log('Next source selected.' + sourceIndex)
  if (sourceIndex < sources.length) {
    loadNextSource();
  } else {
    document.getElementById('player-src2').textContent = 'No valid audio source was found.';
    document.getElementById('player-error').style.display = 'block';
    player.src = failedSource;
    player.volume = 0.25; // Set volume to 0.25 for fallback
    player.loop = true; // Enable loop for fallback
    startBtn.style.display = 'block';
  }
};

loadingBtn.style.display = 'block';

loadNextSource();

// 'canplaythrough' event handler
player.addEventListener('canplaythrough', function() {
  console.log('canplaythrough even fired')
  if (sourceIndex !== sources.length) {
    startBtn.style.display = 'block'; // If no more sources then hide the "tune in" button
  }
  loadingBtn.style.display = 'none';
  if (sourceIndex === 1) {
    console.warn('Standby Audio Source Used: ' + player.src);
    document.getElementById('player-src1').textContent = 'The standby audio source is active until local audio is buffered.';
    document.getElementById('player-warning').style.display = 'block';
  } else if (sourceIndex === 2) {
    console.warn('Fallback Audio Source Used: ' + player.src);
    document.getElementById('player-src1').textContent = 'The fallback audio source is active until local audio is buffered.';
    document.getElementById('player-warning').style.display = 'block';
  }
  player.removeEventListener('error', handleSourceError);
});

    // 'click' event handler for start button
    startBtn.addEventListener('click', function() {
        player.play();
        document.querySelectorAll('.vol_con').forEach(function(element) {
            element.style.display = 'block';
        });
        this.style.display = 'none';
        console.log('Start button clicked.');
    });

    // 'click' event handler for volume minus button
    volMinusBtn.addEventListener('click', function() {
        player.volume = Math.max(0.1, player.volume - 0.1);
        console.log('Volume Minus button clicked.');
        console.log(player.volume);
    });

    // 'click' event handler for mute button
    muteBtn.addEventListener('click', function() {
        player.muted = !player.muted;
        console.log('Mute button clicked.');
        if (player.muted) {
            this.classList.add('muted');
        } else {
            this.classList.remove('muted');
        }
    });

    // 'click' event handler for volume plus button
    volPlusBtn.addEventListener('click', function() {
        player.volume = Math.min(1, player.volume + 0.1);
        console.log('Volume Plus button clicked.');
        console.log(player.volume);
    });

    // 'click' event handler for logo link
    logoLink.addEventListener('click', function(event) {
        var sourceIndex = 0;
        loadNextSource();
    });
});
</script>
